[{"createdAt":"2025-10-17T01:04:41.194Z","updatedAt":"2025-10-17T01:55:49.000Z","id":"fDpjF1xykMVeY6kY","name":"write_workflows_json","active":false,"isArchived":false,"nodes":[{"parameters":{"filters":{},"requestOptions":{}},"id":"5088e417-e1a8-4932-add8-571117e623d2","name":"n8n","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[-320,-16],"credentials":{"n8nApi":{"id":"rCgMYtVh9Jz1Vg85","name":"this"}}},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-512,-16],"id":"93d51213-1736-4bbc-a03d-7fadc953926c","name":"on_called"},{"parameters":{"workflowId":{"__rl":true,"value":"rodkQF59SypRleOk","mode":"list","cachedResultUrl":"/workflow/rodkQF59SypRleOk","cachedResultName":"write_json_file"},"workflowInputs":{"mappingMode":"defineBelow","value":{"subdirectory":"backup\\workflows","filename":"={{ $json.name.replace(/\\s+/g, \"_\") + '.json' }}","content":"={{ $json }}"},"matchingColumns":[],"schema":[{"id":"subdirectory","displayName":"subdirectory","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"filename","displayName":"filename","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"content","displayName":"content","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object","removed":false}],"attemptToConvertTypes":true,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.3,"position":[-112,-16],"id":"324f2463-ad85-498f-bf08-53911fa884cb","name":"Call 'write_json_file'"}],"connections":{"n8n":{"main":[[{"node":"Call 'write_json_file'","type":"main","index":0}]]},"on_called":{"main":[[{"node":"n8n","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"n8n":[{"json":{"createdAt":"2025-10-15T19:17:47.650Z","updatedAt":"2025-10-17T01:13:38.000Z","id":"2r4AVo8hQY88LVNY","name":"run_python_module","active":false,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"7329b1d3-6258-47f2-9df7-de202f3a5efc","name":"data","value":"={{ $json.output.record.extra }}","type":"object"},{"id":"db5a1546-0cee-4588-842b-14eea3fc69bb","name":"output.logs","value":"={{ $json.output.text }}","type":"array"},{"id":"06f272f5-e8a6-49f3-b902-876ce7cb3cfa","name":"output.warnings","value":"={{ $json.error.text }}","type":"array"},{"id":"76f9e597-f7ad-480d-8b7f-b3804b9d60df","name":"output.errors","value":"={{ [$json.output.record.exception, $json.error.record.exception].unique().filter(Boolean) }}","type":"array"},{"id":"69bb25e6-d140-4a9a-afa8-33653b1e8a7e","name":"execution","value":"={{ {\n  exit_code: $json.code,\n  time: {\n    elapsed: $json.output.record.elapsed.seconds,\n    stamp: $json.output.record.time.repr\n  },\n  process: {\n    id: $json.output.record.process.id,\n    name: $json.output.record.process.name\n  }\n} }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,-80],"id":"8143d6a1-0f6d-454f-b5a7-eae6ec197b44","name":"parse_output"},{"parameters":{"jsCode":"function process_input() {\n  const { module, positionals, keywords } = $input.first().json\n  const make_interpretable = (str) => JSON.stringify(str.replace(/[\\r\\n\\t']/g, \"\").replace(/&amp;/g, \"%26\")).replace(/\\\\\"/g, '^')\n  const process_command = () => module.includes(\"python\") ? module : `python -m ${module}`\n  const process_arguments = ()  => positionals.length ? [...positionals.map(x => make_interpretable(x))] : []\n  const format_flag = (str) => str.startsWith('-') ? str : str.length === 1 ? `-${str}` : `--${str}`\n  const process_options = () => Object.entries(keywords).map(\n    ([flag, value]) => `${format_flag(flag)} ${make_interpretable(value)}`\n  )\n  return [\n    process_command(), \n    ...process_options(), \n    ...process_arguments()\n  ].join(' ')\n}\n\nreturn { command: process_input() }"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,-80],"id":"5481b754-22f5-4aa5-bad7-8b73bd7636d9","name":"clean_input"},{"parameters":{"command":"={{ $json.command }}"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[448,-80],"id":"54250679-f40f-4c3b-b4a7-31084d556f2d","name":"exec_cmd"},{"parameters":{"workflowInputs":{"values":[{"name":"module"},{"name":"positionals","type":"array"},{"name":"keywords","type":"object"}]}},"id":"c9213423-42c2-451b-b914-c6e551e72f2d","typeVersion":1.1,"name":"Start","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-208,-80]},{"parameters":{"assignments":{"assignments":[{"id":"4709612f-3337-4d56-8e40-bdf3b945b717","name":"module","value":"={{ $json.module }}","type":"string"},{"id":"b316bf9d-3390-4353-9208-d6999ea53ce2","name":"positionals","value":"={{ $json.positionals ?? [] }}","type":"array"},{"id":"abe22477-89c5-4bc9-b64b-4eb41f3ec34d","name":"keywords","value":"={{ $json.keywords ?? {} }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[0,-80],"id":"4af48df6-0c3d-4e39-9a80-c1603d9205d3","name":"Edit Fields"},{"parameters":{"jsCode":"const { stderr, stdout, exitCode } = $input.first().json\n\nconst try_parse = (s) => {\n  try {\n    const json = JSON.parse(s)\n    \n    if ('text' in json && typeof json.text === 'string') {\n      const [first, ...rest] = json.text.split(\"\\n\")\n      const [, entry] = first.split(/\\ \\w+\\.\\w+\\:\\w+\\:\\d+\\ \\-\\ /g)\n      json.text = [entry, ...rest].filter(Boolean)\n    } \n\n    if ('record' in json && typeof json.record === 'object') {\n      const { elapsed, exception, extra, process, time } = json.record\n      json.record = { elapsed, exception, extra, process, time }\n    }\n    \n    return json\n  \n  } catch {\n    if (typeof s === 'object') return s\n    if (typeof s === 'string') return { text: s, record: {} }    \n  }\n}\n\nreturn {\n  code: exitCode,\n  output: try_parse(stdout),\n  error: try_parse(stderr),\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[672,-80],"id":"c3e87de8-3026-4f5f-a8b0-439f6acfbe22","name":"parse_success"}],"connections":{"clean_input":{"main":[[{"node":"exec_cmd","type":"main","index":0}]]},"exec_cmd":{"main":[[{"node":"parse_success","type":"main","index":0}],[]]},"Start":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"clean_input","type":"main","index":0}]]},"parse_success":{"main":[[{"node":"parse_output","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"Start":[{"json":{"module":"n8n_py.parser","positionals":["<html><head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><style>\r\n<!--\r\nbody\r\n\t{font-family:Arial,Helvetica,sans-serif;\r\n\tfont-size:12pt}\r\n.header\r\n\t{padding:10 auto;\r\n\ttop:0;\r\n\tdisplay:block}\r\n.content\r\n\t{padding:10px 0;\r\n\tmargin:0 auto;\r\n\theight:auto}\r\nh1\r\n\t{color:#12428A;\r\n\tpadding:0 0;\r\n\tmargin:0 0}\r\nth\r\n\t{background-color:#12428A;\r\n\tcolor:#FFFFFF;\r\n\tfont-weight:bold}\r\n.footer\r\n\t{color:darkslategrey;\r\n\theight:100px;\r\n\tbottom:0;\r\n\tleft:0;\r\n\twidth:100%}\r\n-->\r\n</style></head><body><div class=\"header\"><table width=\"100%\"><tbody><tr><td width=\"50%\" align=\"left\"><img src=\"https://illinois.tylertech.cloud/ClientBin/logos/Illogo.png\" alt=\"EFile State Logo\"></td><td width=\"50%\" align=\"right\"><h1>Filing Accepted</h1><p style=\"margin:0px\">Envelope Number: 34901352<br>Case Number: 2023DC64<br>Case Name: COLBURN, FELECIA VS. COLBURN, LOGAN</p></td></tr></tbody></table></div><div class=\"content\"><p>The filing below was reviewed and has been accepted by the clerk's office. You may access the file stamped copy of the document filed by clicking on the below link.</p><table width=\"100%\" border=\"1\" cellpadding=\"3\" cellspacing=\"0\"><tbody><tr><th colspan=\"2\">Filing Details</th></tr><tr><td width=\"30%\"><b>Court</b></td><td>Boone County</td></tr><tr><td width=\"30%\"><b>Case Number</b></td><td>2023DC64</td></tr><tr><td width=\"30%\"><b>Case Name</b></td><td>COLBURN, FELECIA VS. COLBURN, LOGAN</td></tr><tr><td width=\"30%\"><b>Date/Time Submitted</b></td><td>10/15/2025 1:34 PM CST</td></tr><tr><td width=\"30%\"><b>Date/Time Accepted</b></td><td>10/15/2025 1:52 PM CST</td></tr><tr><td width=\"30%\"><b>Accepted Comments</b></td><td>Thank you</td></tr><tr><td width=\"30%\"><b>Filing Type</b></td><td>EFileAndServe</td></tr><tr><td width=\"30%\"><b>Filing Description</b></td><td>Proposed Order</td></tr><tr><td width=\"30%\"><b>Filing Code</b></td><td>Proposed Order</td></tr><tr><td width=\"30%\"><b>Filed By</b></td><td>Mason Crosby</td></tr><tr><td width=\"30%\"><b>Filing Attorney</b></td><td>Tyler Crosby</td></tr></tbody></table><br><table width=\"100%\" border=\"1\" cellpadding=\"3\" cellspacing=\"0\"><tbody><tr><th colspan=\"2\">Document Details</th></tr><tr><td width=\"30%\"><b>Lead Document</b></td><td>Colburn - Rule to Show Cause.pdf</td></tr><tr><td width=\"30%\"><b>Lead Document Page Count</b></td><td>2</td></tr><tr><td width=\"30%\"><b>File Stamped Copy</b></td><td><a href=\"https://illinois.tylertech.cloud/ViewDocuments.aspx?FID=d7d21f39-b94a-4b0f-8975-e23162fb36ca\">Download Document</a></td></tr><tr><td colspan=\"2\" align=\"center\">This link is active for 548 days. To access this document, you will be required to enter your email address. Click <a href=\"https://content.tylerhost.net/docs/Filer_Information.pdf\" target=\"_blank\" rel=\"noopener\">here</a> for more information.</td></tr></tbody></table><p>If the link above is not accessible, copy this URL into your browser's address bar to view the document: <br>https://illinois.tylertech.cloud/ViewDocuments.aspx?FID=d7d21f39-b94a-4b0f-8975-e23162fb36ca</p><p>If you are not represented by a lawyer, we want to improve your e-filing experience. Please <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScTqDkGzBQm25gaSWw8pPmfInrdkfkXBuAIS1G2Wi-MM4pqWA/viewform\">click here</a> to fill out a short survey. </p><p><b>Please Note:</b> If you have not already done so, be sure to add yourself as a service contact on this case in order to receive eService.</p></div><div class=\"footer\"><p width=\"100\" align=\"center\">For technical assistance, contact your service provider<br></p><div id=\"contactname\">Odyssey File &amp; Serve</div><br><div id=\"contactphone\">(800) 297-5377</div><br>Please do not reply to this email. It was automatically generated. <p></p></div></body></html>"],"keywords":null}}]},"versionId":"d48dc36b-3fcf-4d42-b688-a50b2557e490","triggerCount":0,"shared":[{"createdAt":"2025-10-15T19:17:47.651Z","updatedAt":"2025-10-15T19:17:47.651Z","role":"workflow:owner","workflowId":"2r4AVo8hQY88LVNY","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:10:02.746Z","updatedAt":"2025-10-17T01:10:02.746Z","id":"oh4Bp9q4P5dx9613","name":"utility"}]}},{"json":{"createdAt":"2025-10-17T01:11:03.275Z","updatedAt":"2025-10-17T01:39:07.000Z","id":"MmCPsZXUQbO1KAyu","name":"write_credentials_json","active":false,"isArchived":false,"nodes":[{"parameters":{"command":"bun x n8n export:credentials --all --decrypted"},"id":"43e84ce6-f7c6-434e-abeb-8fb843e46275","name":"Execute Command","type":"n8n-nodes-base.executeCommand","position":[208,-48],"typeVersion":1},{"parameters":{"jsCode":"// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"},"id":"981c9b33-3869-4bf3-8f41-72805b32c652","name":"JSON formatting","type":"n8n-nodes-base.code","position":[432,-48],"typeVersion":2},{"parameters":{"content":"### * NEED TO SET REPO INFO MANUALLY\n","height":80,"width":333},"id":"1f4dbae5-ed2c-4aee-9f28-39903eccb1e0","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[368,160]},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[16,-48],"id":"47b6bb6e-f356-4a5c-a17d-43db30eb44c0","name":"on_called"},{"parameters":{"operation":"toJson","options":{}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[640,-48],"id":"c7d214b5-f8da-4c0b-8736-691e33b5e5cc","name":"Convert to File"},{"parameters":{"operation":"write","fileName":"={{ $json.stdout }}\\backup\\credentials.json","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[864,-224],"id":"62cbdb8f-9019-4159-8219-410179331941","name":"Read/Write Files from Disk"},{"parameters":{"command":"echo %PWD%"},"id":"186ffc8a-0aff-4c26-b194-b6c3e7191262","name":"get_pwd","type":"n8n-nodes-base.executeCommand","position":[16,-240],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[624,-224],"id":"4fdccb40-8851-4d23-8c96-2d74e7321028","name":"Merge"}],"connections":{"Execute Command":{"main":[[{"node":"JSON formatting","type":"main","index":0}]]},"JSON formatting":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"on_called":{"main":[[{"node":"Execute Command","type":"main","index":0},{"node":"get_pwd","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Merge","type":"main","index":1}]]},"get_pwd":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"1c5e215c-6d19-4b55-bc3d-e3c0bf31e8af","triggerCount":0,"shared":[{"createdAt":"2025-10-17T01:11:03.275Z","updatedAt":"2025-10-17T01:11:03.275Z","role":"workflow:owner","workflowId":"MmCPsZXUQbO1KAyu","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:09.099Z","updatedAt":"2025-10-17T01:13:09.099Z","id":"VCp81cfqLfblmEUD","name":"backup"}]}},{"json":{"createdAt":"2025-10-17T01:15:35.125Z","updatedAt":"2025-10-17T01:22:49.000Z","id":"PLc6m9UXsZVmRi1q","name":"auto_backup","active":true,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"triggerAtHour":21}]}},"id":"cb077f04-f923-470a-ba3b-9da955514346","name":"at_2100","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-96,240]},{"parameters":{"workflowId":{"__rl":true,"value":"MmCPsZXUQbO1KAyu","mode":"list","cachedResultUrl":"/workflow/MmCPsZXUQbO1KAyu","cachedResultName":"backup_credentials"},"options":{"waitForSubWorkflow":true}},"id":"66310051-72e6-4272-b0a4-7c559a16bc44","name":"backup_creds","type":"n8n-nodes-base.executeWorkflow","typeVersion":1.1,"position":[272,144]},{"parameters":{"workflowId":{"__rl":true,"value":"fDpjF1xykMVeY6kY","mode":"list","cachedResultUrl":"/workflow/fDpjF1xykMVeY6kY","cachedResultName":"backup_workflows"},"options":{"waitForSubWorkflow":true}},"id":"ce485367-b6f1-4fa9-be0d-6e6ba6a0e53c","name":"backup_workflows","type":"n8n-nodes-base.executeWorkflow","typeVersion":1.1,"position":[272,320]}],"connections":{"at_2100":{"main":[[{"node":"backup_creds","type":"main","index":0},{"node":"backup_workflows","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:at_2100":{"recurrenceRules":[]}},"meta":null,"pinData":{},"versionId":"4a9725d6-757f-4632-8f74-8ae338c1f837","triggerCount":1,"shared":[{"createdAt":"2025-10-17T01:15:35.125Z","updatedAt":"2025-10-17T01:15:35.125Z","role":"workflow:owner","workflowId":"PLc6m9UXsZVmRi1q","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:09.099Z","updatedAt":"2025-10-17T01:13:09.099Z","id":"VCp81cfqLfblmEUD","name":"backup"}]}},{"json":{"createdAt":"2025-10-17T01:04:41.194Z","updatedAt":"2025-10-17T01:22:29.000Z","id":"fDpjF1xykMVeY6kY","name":"backup_workflows","active":false,"isArchived":false,"nodes":[{"parameters":{"filters":{},"requestOptions":{}},"id":"5088e417-e1a8-4932-add8-571117e623d2","name":"n8n","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[-320,-16],"credentials":{"n8nApi":{"id":"rCgMYtVh9Jz1Vg85","name":"this"}}},{"parameters":{"values":{"string":[{"name":"repo.path","value":"workflows/"},{"name":"repo.name","value":"n8n_backup"},{"name":"repo.owner","value":"zaynram"}]},"options":{}},"id":"266fe8cb-3503-4673-a2c3-f1c59ca64d9b","name":"Repo","type":"n8n-nodes-base.set","position":[-128,-16],"typeVersion":1},{"parameters":{},"id":"2f1eec0b-08f7-46cc-81ee-95801a556bd9","name":"Log","type":"n8n-nodes-base.executionData","typeVersion":1,"position":[-368,240]},{"parameters":{"content":"### * NEED TO SET REPO INFO MANUALLY\n","height":80,"width":333},"id":"3e4d145e-19ac-4dde-b31b-602babe8e127","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-144,-48]},{"parameters":{"workflowId":{"__rl":true,"value":"vxlgJqjOgFvw0dIp","mode":"list","cachedResultUrl":"/workflow/vxlgJqjOgFvw0dIp","cachedResultName":"git_push"},"options":{}},"id":"651910e0-1f08-4d77-b8e1-a928feaa052f","name":"Call 'git_push'","type":"n8n-nodes-base.executeWorkflow","typeVersion":1.1,"position":[80,-16]},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-512,-16],"id":"93d51213-1736-4bbc-a03d-7fadc953926c","name":"on_called"}],"connections":{"Repo":{"main":[[{"node":"Call 'git_push'","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Repo","type":"main","index":0}]]},"Call 'git_push'":{"main":[[{"node":"Log","type":"main","index":0}]]},"on_called":{"main":[[{"node":"n8n","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"0dcbf380-d4dd-404d-8ce8-2f07c1af9795","triggerCount":0,"shared":[{"createdAt":"2025-10-17T01:04:41.194Z","updatedAt":"2025-10-17T01:04:41.194Z","role":"workflow:owner","workflowId":"fDpjF1xykMVeY6kY","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:09.099Z","updatedAt":"2025-10-17T01:13:09.099Z","id":"VCp81cfqLfblmEUD","name":"backup"}]}},{"json":{"createdAt":"2025-10-14T22:24:45.374Z","updatedAt":"2025-10-17T01:14:02.000Z","id":"mkXZp2NvnMMkQTNt","name":"fs_auto_upload","active":false,"isArchived":false,"nodes":[{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"output":"fields","fields":["body","subject","hasAttachments","sentDateTime","receivedDateTime"],"filters":{"foldersToInclude":["AAMkADhiNjEzMzg1LTA4MTUtNDc5Zi04MDQzLTY0ZDMzZWM0M2JkNQAuAAAAAAA9tdLGRf1DT6IA2HuobF7PAQBzxYPmhrKPRpPw-mKbCd_4AAOedX8jAAA="]},"options":{}},"type":"n8n-nodes-base.microsoftOutlookTrigger","typeVersion":1,"position":[-400,-80],"id":"2784ab7f-cb21-4a5b-a186-f285771df0a9","name":"on email","credentials":{"microsoftOutlookOAuth2Api":{"id":"IQ02viLn0rWxHgiU","name":"outlook [eservice]"}}},{"parameters":{"workflowId":{"__rl":true,"value":"2r4AVo8hQY88LVNY","mode":"list","cachedResultUrl":"/workflow/2r4AVo8hQY88LVNY","cachedResultName":"Run Python Module"},"workflowInputs":{"mappingMode":"defineBelow","value":{"module":"n8n_py.parser","positionals":"={{ [$json.body.content] }}"},"matchingColumns":[],"schema":[{"id":"module","displayName":"module","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"positionals","displayName":"positionals","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"array","removed":false},{"id":"keywords","displayName":"keywords","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object","removed":false}],"attemptToConvertTypes":true,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-128,-80],"name":"parse_link","id":"bfe1f739-7413-4ef2-a0cd-2334024c34f1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"e74e531e-cfec-4622-8f9c-00ae88f6ccc1","leftValue":"={{ $json.execution.exit_code }}","rightValue":0,"operator":{"type":"number","operation":"equals"}},{"id":"ee5d209f-4b4d-427d-86e4-f8a18b99cfe4","leftValue":"={{ $json.data.paths }}","rightValue":"","operator":{"type":"array","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[80,-80],"id":"94462cf5-4636-4f3f-975d-4b00fb300418","name":"if_ok"},{"parameters":{"fileSelector":"={{ $json.path }}","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[320,-256],"id":"b05ef71a-5aae-4175-9fde-8583eb64b3d9","name":"read_file"},{"parameters":{"fieldToSplitOut":"data.paths","options":{"destinationFieldName":"path"}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[80,-256],"id":"b77b3034-6464-4916-87e8-96e5c50f9928","name":"split_out_paths"},{"parameters":{"errorMessage":"={{  $json }}"},"type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[112,160],"id":"c5b51ad2-7981-4f7e-bd86-be8d144fdf9b","name":"Stop and Error"}],"connections":{"on email":{"main":[[{"node":"parse_link","type":"main","index":0}]]},"parse_link":{"main":[[{"node":"if_ok","type":"main","index":0}]]},"if_ok":{"main":[[{"node":"split_out_paths","type":"main","index":0}],[{"node":"Stop and Error","type":"main","index":0}]]},"split_out_paths":{"main":[[{"node":"read_file","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"a8707761-5ff6-41c1-af73-30350f77dfaf","triggerCount":0,"shared":[{"createdAt":"2025-10-14T22:24:45.374Z","updatedAt":"2025-10-14T22:24:45.374Z","role":"workflow:owner","workflowId":"mkXZp2NvnMMkQTNt","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:55.132Z","updatedAt":"2025-10-17T01:13:55.132Z","id":"8SM64STUyw1PN4fJ","name":"eservice"}]}},{"json":{"createdAt":"2025-10-15T20:14:55.680Z","updatedAt":"2025-10-15T20:14:55.680Z","id":"uZoMMZYsvpgIUMMa","name":"Main","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"={{ $json.link }}","sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"__LASTFOCUS"},{"name":"__EVENTTARGET"},{"name":"__EVENTARGUMENT"},{"name":"__VIEWSTATE","value":"={{ $json.data.__viewstate }}"},{"name":"__VIEWSTATEGENERATOR","value":"={{ $json.data.__viewstategenerator }}"},{"name":"__EVENTVALIDATION","value":"={{ $json.data.__eventvalidation }}"},{"name":"emailAddress","value":"={{ $json.data.emailAddress }}"},{"name":"SubmitEmailAddressButton","value":"Validate"},{"name":"username","value":"={{ $json.data.emailAddress }}"},{"name":"SubmitUsernameButton","value":"={{ $json.data.emailAddress }}"}]},"options":{"response":{"response":{"fullResponse":true}}}},"id":"cbab382b-de64-4f07-9854-1e23e397875b","name":"POST","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[688,752]},{"parameters":{"url":"={{ $json.link }}","options":{}},"id":"4e931fa8-5633-4c79-9d33-928d6af33ed2","name":"GET","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-336,672]},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"output":"fields","fields":["body"],"filters":{"foldersToInclude":["AAMkADhiNjEzMzg1LTA4MTUtNDc5Zi04MDQzLTY0ZDMzZWM0M2JkNQAuAAAAAAA9tdLGRf1DT6IA2HuobF7PAQBzxYPmhrKPRpPw-mKbCd_4AAKtM5uAAAA="]},"options":{}},"id":"2c3bca92-422c-4548-beb2-cc4c44374289","name":"On Email Received","type":"n8n-nodes-base.microsoftOutlookTrigger","typeVersion":1,"position":[-752,496],"credentials":{"microsoftOutlookOAuth2Api":{"id":"IQ02viLn0rWxHgiU","name":"outlook [eservice]"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Parse Response').item.json.links.length > 1 }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Multiple Files"}]},"options":{"fallbackOutput":"extra"}},"id":"4a38226d-7e65-4114-9b8f-614f1054cf7a","name":"File Count Router","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[320,672]},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"pathLower"}]},"options":{}},"id":"6dd3b773-b81d-4b86-af38-e09e7a4714af","name":"Collect Paths","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[320,208]},{"parameters":{"mode":"chooseBranch","useDataOfInput":2},"id":"57aa4bde-8db8-4acf-aa9e-7999c8605f3c","name":"WaitForMerge","type":"n8n-nodes-base.merge","typeVersion":3,"position":[-112,448]},{"parameters":{"operation":"pdf","options":{}},"id":"ca517649-cc5a-45c5-b07e-da7c5aa91b94","name":"Extract Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[96,448]},{"parameters":{"jsCode":"body_in = $input.first().json.text.toLowerCase();\n  //console.log(body_in);\n\nfunction isAlpha(ch) {\n  return /^[A-Za-z]{1,1}$/.test(ch)\n}\n\nfunction removeNonAlpha(chunk, type) {\n  var digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  if (type == 'probate') return chunk;\n  var new_chunk = '';\n  for (var c in chunk) {\n    \n    if (c > 0) var prev = chunk[c - 1];\n    if (c < chunk.length) var next = chunk[c + 1];\n\n    var char = chunk[c];\n    if ((!isAlpha(chunk[c]))) {\n      if (!(isAlpha(next) || (isAlpha(prev))) || (next == '.')) {\n        char = ' ';\n      }\n      if (!(chunk[c] == '-' || (digits.includes(chunk[c])))) {\n        char = ' ';\n      }\n    }\n    if (chunk[c] == ' ' && next == ' ' && prev == ' ') continue;\n    new_chunk += char;\n  }\n\n  //console.log(new_chunk);\n\n  return new_chunk;\n}\n\nfunction findSep(seps, trim) {\n  for (var s in seps) {\n    if (trim.includes(seps[s])) {\n      var separ = seps[s];\n      break;\n    }\n  }\n  return separ;\n}\n\nfunction reduce(_name) {\n  _name.sort((a, b) => b.length - a.length);\n    console.log('Sorted Array to Reduce:' + _name.join(' | '));\n  while (_name.length > 2) _name.pop();\n\n  return _name;\n}\n\nfunction replaceGivenThenPush(curr_name, to_reps, reps, names) {\n  names.push(replaceGiven(curr_name, to_reps, reps));\n  names.push(replaceGiven(curr_name, to_reps, reps).split(' ').reverse().join(', '));\n  return names;\n}\n\nfunction replaceGiven(curr_, to_reps, reps) {\n  for (var r in to_reps) curr_ = curr_.toString().replace(to_reps[r], reps[r]);\n  return curr_;\n}\n\nfunction capitalizeFirst(curr_name) {\n  for (var q = 0; q < curr_name.length; q++) {\n    curr_name[q] = (curr_name[q][0].toUpperCase() + curr_name[q].slice(1)).trim().replaceAll(',', '');\n  }\n  return curr_name;\n}\n\nfunction setup() {\n  //console.log('hit setup--> n =', n);\n  var _body = body_in;\n\n  var _data = {\n    split_on:\n      ':',\n    pre_line:\n      false,\n    matter_type:\n      'none'\n  }\n\n  var keywords = {\n    divorce:\n      ['marriage', 'dissolution of marriage'],\n    adoption:\n      ['adoption', 'adopt', 'to be adopted'],\n    probate:\n      ['estate', 'deceased', 'heirship'],\n  }\n\n  for (var k in keywords) {\n    for (var i in keywords[k]) {\n      if (_body.includes(keywords[k][i])) {\n        _data.matter_type = k;\n          console.log('Matter Type = ' + _data.matter_type);\n        break;\n      }\n    }\n  }\n\n  if (_body.includes('marriage of')) {\n    _data.split_on = 'marriage of:';\n  } else if (_body.includes('adoption of')) {\n    _data.split_on = 'adoption of:';\n  } else if (_body.includes('estate of')) {\n    _data.split_on = 'estate of:';\n  } else if (_body.includes('matter of')) {\n    _data.split_on = 'matter of:';\n  }\n    console.log('Split Value = ' + _data.split_on);\n    console.log('Matter Type = ' + _data.matter_type);\n  if (_body.includes('in re')) {\n    _data.pre_line = true;\n  }\n    //console.log('Has Pre Line = ' + _data.pre_line);\n  return [_data, _body];\n}\n\nfunction noPreLine(body) {\n  //TO DO: this entire function ...\n  var names = [];\n  body = removeNonAlpha(body.replaceAll('crosby & crosby', '').replaceAll('county of', '').replaceAll('judicial circuit', '').replaceAll('state of illinois', 'soi').replaceAll('in the circuit court of the', 'cc').replaceAll('res ondent', 'respondent'));\n  var _seps = [' & ', 'name', ' vs ', ' v '];\n  var irreg_separ = findSep(_seps, body);\n    console.log(irreg_separ, body);\n  switch (irreg_separ) {\n    case ' v ':\n    case ' vs ':\n    case ' & ':\n      var _reps = [\n        ',', \n        'petitioner',\n        'respondent',\n        'february',\n        'cc-',\n        'winnebago',\n        ' case no ',\n        ' op '\n      ];\n      var rep_vals = [\n        ', ',\n        'P',\n        'R',\n        '0',\n        '0',\n        'W',\n        '',\n        ''\n      ];\n      body = replaceGiven(removeNonAlpha(body, _reps, rep_vals), _reps, rep_vals);\n      var arr = [(body.split(irreg_separ)[0]).split(' ').reverse().join(' '), body.split(irreg_separ)[1]];\n\n      for (var half in arr) {\n        var curr_arr = arr[half].split(' ');\n        if (curr_arr.length > 100) for (var i = curr_arr.length; i > 10; i--) curr_arr.pop();\n          console.log('Curr_Arr = ' + curr_arr)\n        var curr_name = reduce(curr_arr);\n          console.log('CURRNAME: ' + curr_name);      \n        curr_name = capitalizeFirst(curr_name);\n        names = replaceGivenThenPush(curr_name, _reps, rep_vals, names);\n      }\n      console.log(\"160 [body = ]: \" + body);\n      break;\n    case 'name':\n      names.push(['x, y']);\n      console.log(\"164 [names = ]: \" + names);\n      break;\n    case 'page':\n      names.push(['x, y']);\n      break;\n    default:\n      names.push(['x, y']);\n      break;\n  }\n\n  return names;\n}\n\nfunction withPreLine(body, data) {\n  //break body into smaller parts for efficiency\n  var _trim = body.split(data.split_on)[1];\n  var type = data.matter_type;\n  //create empty array to store names in\n  var names = [];\n\n  switch (type) {\n\n    case 'divorce':\n      var _seps = ['vs.', 'v. ', ' vs ', ' v ', 'vs', 'v'];\n      var _reps = ['petitioner', '\\n', 'respondent', 'case no', 'ndent', 'february', 'cc-'];\n      var rep_vals = ['', '', 'E', '', 'E', 'feb', ''];\n\n      var _size = 2;\n\n      break;\n\n    case 'adoption':\n      var _seps = [' and ', 'and ', ' and'];\n      var _reps = ['\\n', ')', 'petitioner', 'petitioner', 'case no.'];\n      var rep_vals = ['', '', '', '', ''];\n\n      var _size = 2;\n\n      break;\n\n    case 'probate':\n      var _seps = ['his', 'her', ' and '];\n      var _reps = [''];\n      var rep_vals = [''];\n\n      var count = 0;\n      var _nums = false;\n\n      for (var c in _trim) {\n        if (_trim[c] == '.') {\n          if (!isAlpha(_trim[c - 1])) count++;\n          _nums = true;\n        }\n      }\n\n      if (_nums) var _size = count;\n      else var _size = 1;\n\n      break;\n\n    default:\n      var _seps = ['vs.', 'v.', ' vs ', ' v ', 'vs', 'P'];\n      var _reps = [ 'february', 'cc-', 'respondent', 'petitioner'];\n      var rep_vals = [ 'feb', '', 'R', 'P'];\n      \n  }\n\n  console.log(type, _size);\n\n  //find and return name separator\n  \n  for (var x in _reps) {\n    if (_trim.includes(_reps[x])) {\n      _trim = _trim.replaceAll(_reps[x], rep_vals[x]);\n    }\n  }\n  var separ = findSep(_seps, _trim);\nconsole.log('Separator = ' + separ);\nconsole.log('Trim = ' + _trim)\n  //split txt on separator to isolate different names\n  var _chunks = _trim.split(separ);\nconsole.log('Chunks Size = ' + _chunks.length)\n  set_types = ['divorce', 'adoption', 'probate'];\n  \n  if (!set_types.includes(type)) _size = _chunks.length;\n  //extract each name from their respective chunk\n  for (var n = 0; n <= _size; n++) {\n      \n    _chunks[n] = removeNonAlpha(_chunks[n], type);\nconsole.log('Chunk[' + n + '] =  ' + _chunks[n]);\n\n    if (!_chunks[n] || _chunks[n] == \"\") continue;\n    if (_chunks[n].includes('R')) _chunks[n] = _chunks[n].split('R')[0];\n    switch (type) {\n\n      case 'divorce':\n        if (n == _size) continue;\n\n        var curr_name = _chunks[n].slice(0, _chunks[n].indexOf('E')).split(' ');\n        break;\n\n      case 'adoption':\n        if (n == _size) continue;\n\n        var curr_name = _chunks[n].split(' ');\n        break;\n\n      case 'probate':\n        switch (_size) {\n          case 1:\n            //TO DO: add logic to handle cases where there is a single name\n            var estate_name = _chunks[n].split('deceased')[0].split(' ');\n            for (n in estate_name) {\n              \n            }\n            break;\n          default:\n            if (n == 0) continue;\n            var curr_name = _chunks.find(x => x.includes(n.toString().concat('.'))).split(n.toString().concat('.'))[1].split(' ');;\n\n        }\n        break;\n\n      default:\n        var curr_name = _chunks[n].replaceAll('\\n', ' ').split(' ');\n    }\n\n    curr_name = reduce(curr_name);\n\n    console.log(curr_name, '\\n\\n', curr_name.length, n);\n\n    curr_name = capitalizeFirst(curr_name);\n\n    var _rep2 = [\n      ','\n    ];\n    var rep_v2 = [\n      ', '\n    ];\n\n    names = replaceGivenThenPush(curr_name, _rep2, rep_v2, names);\n    \n  }\n\n for (n in names) if (names[n].endsWith(',')) {\n    names[n] = names[n].slice(0, -1);\n  }\n  return names;\n}\n\nfunction main(setup_result) {\n  if (setup_result[0].pre_line == true) return withPreLine(setup_result[1], setup_result[0]);\n    console.log('Using Function: noPreLine');\n  return noPreLine(setup_result[1]);\n}\n\nvar c_error = 'none';\nvar res = main(setup());\nif (res[0][0] == '' && res.length == 1) c_error = 'err: names not found';\nfor (n in res) if (res[n].at(-1) == ',') res[n] = res[n].slice(0, -1);\noutput = {\n  names:\n     res,\n  catch_error:\n    c_error\n}\n\nconsole.log(output.names);\n\nreturn output;\n\n"},"id":"a38a5f99-b0a8-422c-ac7f-c7238f431859","name":"Parse Names","type":"n8n-nodes-base.code","typeVersion":2,"position":[320,448]},{"parameters":{"authentication":"oAuth2","resource":"folder","operation":"list","path":"=/Clio/{{ $json.names.replaceAll('Jorge, Baeza', 'Ramires Baeza, Jorge (GEORGE)').replaceAll('Bittner, Joshua', 'Bittner, Josh')}}","limit":1,"filters":{}},"id":"ec43237d-8108-497c-b284-7b1e93468fa2","name":"Find Folder Paths","type":"n8n-nodes-base.dropbox","typeVersion":1,"position":[96,208],"alwaysOutputData":true,"retryOnFail":false,"credentials":{"dropboxOAuth2Api":{"id":"dw6p2EgapsTjWrAP","name":"dbx [zramdass]"}},"onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"fe9b1641-5ee2-40d2-94f8-870f0ac15cf2","leftValue":"={{ $json.hasField('pathLower') && \n$json.pathLower.isNotEmpty() && $json.pathLower[0].includes('-')\n}}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"02bb9a14-9601-431a-b6cc-b75017af91be","leftValue":"={{ $json.hasField('path_lower') &&  $json.path_lower.isNotEmpty() && $json.path_lower[0].includes('-') }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"looseTypeValidation":true,"options":{}},"id":"5c73c7bb-8c66-46f0-9a0b-f8a01713dfaa","name":"Validate","type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[528,496],"alwaysOutputData":true},{"parameters":{"keep":"lastItems"},"id":"ddc19121-a903-42b1-90ef-f1268e8517f5","name":"Paths to Path","type":"n8n-nodes-base.limit","typeVersion":1,"position":[928,496]},{"parameters":{"assignments":{"assignments":[{"id":"011a54f4-1d44-4eed-afb7-eb636dadbd76","name":"=headers[\"content-disposition\"]","value":"={{ $json.headers[\"content-disposition\"].replace('.pdf', ' - amended.pdf')}}","type":"string"}]},"includeOtherFields":true,"options":{}},"id":"626fb928-38c9-45f6-9e5b-bfcda31ce000","name":"Add Amended","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1280,448]},{"parameters":{"authentication":"oAuth2","path":"={{ $json.pathLower }}/[FS] {{ $json.headers[\"content-disposition\"].split('\\\"')[1].replace(' (1)', '').replace('(1)', '').replace('-Signed', '').replace('-signed', '') }}","binaryData":true,"binaryPropertyName":"=data"},"id":"296678c5-7c36-4ede-a20e-b71750d4271f","name":"Upload File","type":"n8n-nodes-base.dropbox","typeVersion":1,"position":[1472,448],"retryOnFail":false,"maxTries":5,"waitBetweenTries":300,"credentials":{"dropboxOAuth2Api":{"id":"dw6p2EgapsTjWrAP","name":"dbx [zramdass]"}},"onError":"continueErrorOutput"},{"parameters":{"fieldToSplitOut":"=links","include":"allOtherFields","options":{"destinationFieldName":"link"}},"id":"8d16e32e-2138-4290-850d-21a228936031","name":"Split Links","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[96,672]},{"parameters":{"fieldToSplitOut":"=names","options":{"destinationFieldName":"names","includeBinary":true}},"id":"6adb7e0b-3061-43f2-ad59-ebafc03627e3","name":"Split Names","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-112,208]},{"parameters":{"jsCode":"const items = $input.all();\n//parse response data\nconst extractedData = items.map((item) => {\n  const data = item?.json?.data;\n  const viewstateMatch = data.match(/id=\"__VIEWSTATE\" value=\"([^\"]*)\"/);\n  const viewstategeneratorMatch = data.match(\n    /id=\"__VIEWSTATEGENERATOR\" value=\"([^\"]*)\"/,\n  );\n  const eventvalidationMatch = data.match(\n    /id=\"__EVENTVALIDATION\" value=\"([^\"]*)\"/,\n  );\n  const linkSuffixMatch = data.match(\n    /action=\".([^\"]*)\"/,\n  );\n\n  linkSuff = linkSuffixMatch[1].toString().replaceAll(';', '').replaceAll('amp', '');\n\n  \n  if (!data.toLowerCase().includes('odyssey')) {\n    \n    link = $('Parse Link').first().json.link;\n    link_pre = link.split('/V').at(0);\n    link = ''.concat(link_pre, linkSuff);\n    \n  } else {\n    \n    link = $('Parse Link').first().json.link;\n    link_pre = link.split('/V').at(0);\n    lbody = data.split('<a href=\\\"');\n    lbody.shift();\n    len = lbody.length\n    \n    links = [];\n\n    for (i = 0; i < len; i++) {\n      add = ''.concat(link_pre, lbody[i].split('\\\"').at(0).replaceAll(';', '').replaceAll('amp', ''));\n     // console.log(add);\n      links.push(add);\n    }\n    return {\n      links:\n        links,\n      data: {\n        emailAddress:\n          'eservice@crosbyandcrosbylaw.com',\n        __viewstate: viewstateMatch ? viewstateMatch[1] : null,\n        __viewstategenerator: viewstategeneratorMatch\n          ? viewstategeneratorMatch[1]\n          : null,\n        __eventvalidation: eventvalidationMatch ? eventvalidationMatch[1] : null,\n      }\n    };\n  }\n  \n  \n  return {\n    links:\n      [link],\n    data: {\n      emailAddress:\n        'eservice@crosbyandcrosbylaw.com',\n      __viewstate: viewstateMatch ? viewstateMatch[1] : null,\n      __viewstategenerator: viewstategeneratorMatch\n        ? viewstategeneratorMatch[1]\n        : null,\n      __eventvalidation: eventvalidationMatch ? eventvalidationMatch[1] : null,\n    }\n  };\n});\n\nreturn extractedData;\n"},"id":"2899ba26-ef71-459c-a74d-e73945a9fc7b","name":"Parse Response","type":"n8n-nodes-base.code","typeVersion":2,"position":[-112,672]},{"parameters":{"jsCode":"\n//assign var body to email body content\nbody = $input.last().json.body['content'];\n\n//get file URL from email body\nspl_body = body.split(\"copy this URL into your browser's address bar to view the document: <br>\").at(1);\nidx = spl_body.indexOf('<');\n\n//return URL\nlink = spl_body.substring(0, idx).replaceAll(';', '').replaceAll('amp', '');\n\n\n\nreturn { link };\n"},"id":"1a2f9be1-36b5-4386-8419-121d59913b7d","name":"Parse Link","type":"n8n-nodes-base.code","typeVersion":2,"position":[-672,800]},{"parameters":{"jsCode":"body = $input.last().json.body[\"content\"].toLowerCase();\n\nrepl_vals = [\n  ['in the matter of: ', 'envelope number: '], \n  [': _first _last vs.', '</td>']\n];\n\nfor (i in repl_vals[0]) {\n  body = body.replaceAll(repl_vals[0][i], repl_vals[1][i]);\n}\n\nbody_to_arr = body.split('</td>');\nnames = [];\n_fs = [];\n_ls = [];\n\n//extract portion of text with case names\nfound_names = false;\n\nfor (i = 1; i < body_to_arr.length - 1; i++) {\n  \n  //console.log(body_to_arr[i]);\n  txt = body_to_arr[i];\n  \n  if (!txt.includes('name') && !txt.includes('case style')) {\n    found_names = false;\n    continue;\n  }\n\n  txt = txt.slice(txt.lastIndexOf(':')  + 1, txt.lastIndexOf('<')).trim();\n  if (txt.includes('confidential')) break;\n  \n  found_names = true;\n  break;\n}\n\n//find parseable name separator\n_seps = [\n  'vs.', 'v.', ' vs ', ' v ', 'vs', 'v', 'and'\n];\nfound_sep = false;\n\n//check text is parseable\nif (found_names) {\n\n  for (s in _seps) {\n    separ = _seps[s];\n\n    if (txt.includes(separ)) {\n      found_sep = true;\n      break;\n    }\n\n    found_sep = false;\n  }\n\n  //check proper parsing \n  if (found_sep) {\n    \n    narr = txt.split(separ);\n    \n    //parse names through various format types & return names as [First Name, Last Name]\n    for (j = 0; j < narr.length; j++) { \n        console.log('\\n\\n << [FOR j = '+j+'] >> ' + narr[j]);\n      curr_name = narr[j].replace(', ', ' ').trim().split(' ');\n      //if (curr_name[0].includes(',')) curr_name = curr_name.reverse();\n      \n        //console.log('filtered current name: ' + curr_name);\n      while (curr_name.length > 3) {\n        curr_name.pop();\n      }\n        //console.log('reduced current name: ' + curr_name)\n      for (q = 0; q < curr_name.length; q++) {\n        curr_name[q] = (curr_name[q][0].toUpperCase() + curr_name[q].slice(1)).trim().replaceAll(',', '');\n      }\n\n        console.log('\\n\\n << [Processed Name] >> ' + curr_name.join(' | '));\n      mn_flag = false;\n      if (curr_name.length == 3) {\n        mid = curr_name[1];\n        last = curr_name.pop();\n        first = curr_name.shift();\n        curr_name = [first, last];\n        mn_flag = true;\n      }\n        console.log('\\n\\n << [Middle Name ?] >> ' + mn_flag);\n      \n      names.push(curr_name.toString().replace(',', ', '));\n      names.push(curr_name.reverse().toString().replace(',', ', '));\n      if (mn_flag) {\n        names.push(mid+', '+last);\n        names.push(last+', '+ mid);\n        names.push(first+', '+mid);\n        names.push(mid+', '+first);\n      }\n      _fs.push(curr_name[0]);\n      _ls.push(curr_name[1]);\n    }\n  }\n}\n\nparse_file = !(found_names && found_sep)\n\n  console.log(\n    '\\n\\n << [Found Names ?] >> ' +\n    found_names,\n    '\\n << [Found Separator ?] >> ' +\n    found_sep,\n    '\\n << [Names] >> \\n --- \\n |' +\n    names.join('|\\n --- \\n |') + '|\\n ---'\n  );\n\nreturn {\n  catch_error:\n    parse_file,\n  names:\n    names\n}\n\n"},"id":"07df3e76-2872-4bc7-8e40-0687fb7e4603","name":"Parse Names (Email)","type":"n8n-nodes-base.code","typeVersion":2,"position":[-672,208]},{"parameters":{"resource":"fileFolder","queryString":"=[{{ $now.format('D') }}] - FS Upload Log","limit":1,"filter":{"folderId":{"__rl":true,"value":"1tTCPLjTQTzKpEdC9FIBmZcL7WMBtg5iT","mode":"list","cachedResultName":"FS Daily Upload Logs","cachedResultUrl":"https://drive.google.com/drive/folders/1tTCPLjTQTzKpEdC9FIBmZcL7WMBtg5iT"}},"options":{"fields":["id"]}},"id":"4225c941-3767-4569-b9c4-0c192a1e9c36","name":"Get Log ID","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1136,976],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"BqXKeIPc7ETbnWCr","name":"gdrive [ramdasszayn]"}}},{"parameters":{"assignments":{"assignments":[{"id":"ca5e80e4-46de-4cca-8dc5-46aa9d4bb172","name":"error","value":"={{ false }}","type":"boolean"},{"id":"e9f71212-9c68-4873-92f3-1371c31ea059","name":"disp_num","value":"={{ $json.path_display.split('/').reverse()[1] }}","type":"string"},{"id":"268e0400-32cb-4f2d-ad8a-dad9c91ce561","name":"c_name","value":"={{ $json.path_display.split('/').reverse()[1].split('-')[1].split(',').reverse().join(' ').trim() }}","type":"string"},{"id":"4d155d6d-0632-4edd-9da5-2813f783e37d","name":"time","value":"={{ $json.server_modified.toDateTime().setZone('America/Chicago').format('tt') }}","type":"string"}]},"includeOtherFields":true,"include":"except","excludeFields":"id","options":{}},"id":"5a9e4e21-9e29-42d5-a2cd-8c5ab29ae4e5","name":"Set Success Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1456,960]},{"parameters":{"assignments":{"assignments":[{"id":"ca5e80e4-46de-4cca-8dc5-46aa9d4bb172","name":"error","value":"={{ true }}","type":"boolean"},{"id":"4d155d6d-0632-4edd-9da5-2813f783e37d","name":"time","value":"={{ $now.setZone('America/Chicago').format('tt') }}","type":"string"}]},"includeOtherFields":true,"include":"except","excludeFields":"id","options":{}},"id":"cc1b3459-d1bc-410f-817a-edd9ecd7b1e4","name":"Set Error Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1456,1136]},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"F/S Upload Database","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xxguhkD14_ut_aj1b344mI44BsesgpQapuwAApPJbfs/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Display Number":"={{ $json.disp_num }}","File Name":"={{ $json.name }}","Upload Time":"={{ $json.time }}","Action Needed":"={{ $json.error }}"},"matchingColumns":["File Name"],"schema":[{"id":"Display Number","displayName":"Display Number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"File Name","displayName":"File Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Upload Time","displayName":"Upload Time","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Action Needed","displayName":"Action Needed","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}]},"options":{}},"id":"06b74d47-5047-4ac0-ba8e-9702335c30d0","name":"Log Successful Upload","type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-432,368],"credentials":{"googleSheetsOAuth2Api":{"id":"4LRgDhfNzSsMKby7","name":"gsheets [ramdasszayn]"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"F/S Upload Database","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xxguhkD14_ut_aj1b344mI44BsesgpQapuwAApPJbfs/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Display Number":"=UNKNOWN; CANNOT READ FILE","Upload Time":"={{ $json.time }}","Action Needed":"={{ $json.error }}","File Name":"=ERROR : Please retrieve the document from \"{{$('Parse Link').item.json.link}}\""},"matchingColumns":["File Name"],"schema":[{"id":"Display Number","displayName":"Display Number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"File Name","displayName":"File Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Upload Time","displayName":"Upload Time","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Action Needed","displayName":"Action Needed","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}]},"options":{}},"id":"5106b033-8eb1-45e5-84f7-dc2ca0e3cbf1","name":"Log Failed Upload","type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1872,1040],"credentials":{"googleSheetsOAuth2Api":{"id":"4LRgDhfNzSsMKby7","name":"gsheets [ramdasszayn]"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.error }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Pass"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7fddcdae-026f-4d15-9aba-d240c619ab30","leftValue":"={{ $json.error }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Fail"}]},"options":{}},"id":"1ec9a8b8-5f79-42f2-9bff-00acc09bf8cb","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1776,496]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.pathLower.isNotEmpty() }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"valid"}]},"options":{"fallbackOutput":"extra","renameFallbackOutput":"Parse File"}},"id":"ea5faaf4-a808-4a54-a106-5f7b2063318a","name":"Folder isFound","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[512,208]},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"66efc535-7773-4cbe-a15e-1481c2edfad6","name":"Merge File Info / Data","type":"n8n-nodes-base.merge","typeVersion":3,"position":[1040,720]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"leftValue":"={{ $json.catch_error }}","rightValue":"false","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Valid"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"2d052021-0c21-4de0-9af9-a4ac84fa16ea","leftValue":"={{ $json.catch_error}}","rightValue":"true","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Invalid"}]},"looseTypeValidation":true,"options":{}},"id":"50de454e-9fff-4699-a424-57441ee2eee2","name":"Are Names Valid","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-192,-32]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ ($('On Email Received').isExecuted && $('On Email Received').last().json.body.content.toLowerCase().includes('amended')) && !$json.headers['content-disposition'].toLowerCase().includes('amended') }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"amend"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0d6b4fec-bb24-488e-8076-b30cf1110ed4","leftValue":"={{ ($('On Email Received').isExecuted && $('On Email Received').last().json.body.content.toLowerCase().includes('amended')) && !$json.headers['content-disposition'].toLowerCase().includes('amended')  }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"continue"}]},"options":{}},"id":"9a62b202-b254-4de6-8b60-5273775b701c","name":"needsAmended","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1232,720]},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"83681d10-20a0-4d5b-9b4e-6cccbaeba550","name":"Merge","type":"n8n-nodes-base.merge","typeVersion":3,"position":[1680,768],"executeOnce":false}],"connections":{"POST":{"main":[[{"node":"WaitForMerge","type":"main","index":1},{"node":"Merge File Info / Data","type":"main","index":1}]]},"GET":{"main":[[{"node":"Parse Response","type":"main","index":0}]]},"On Email Received":{"main":[[{"node":"Parse Names (Email)","type":"main","index":0},{"node":"Parse Link","type":"main","index":0}]]},"File Count Router":{"main":[[{"node":"GET","type":"main","index":0}],[{"node":"POST","type":"main","index":0}]]},"Collect Paths":{"main":[[{"node":"Folder isFound","type":"main","index":0}]]},"WaitForMerge":{"main":[[{"node":"Extract Text","type":"main","index":0}]]},"Find Folder Paths":{"main":[[{"node":"Collect Paths","type":"main","index":0}]]},"Validate":{"main":[[{"node":"Paths to Path","type":"main","index":0}]]},"Paths to Path":{"main":[[{"node":"Merge File Info / Data","type":"main","index":0}]]},"Add Amended":{"main":[[{"node":"Upload File","type":"main","index":0}]]},"Upload File":{"main":[[{"node":"Set Success Fields","type":"main","index":0}],[{"node":"Set Error Fields","type":"main","index":0}]]},"Split Links":{"main":[[{"node":"File Count Router","type":"main","index":0}]]},"Split Names":{"main":[[{"node":"Find Folder Paths","type":"main","index":0}]]},"Parse Response":{"main":[[{"node":"Split Links","type":"main","index":0}]]},"Parse Link":{"main":[[{"node":"GET","type":"main","index":0}]]},"Parse Names (Email)":{"main":[[{"node":"Are Names Valid","type":"main","index":0}]]},"Get Log ID":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Set Success Fields":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Set Error Fields":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Extract Text":{"main":[[{"node":"Parse Names","type":"main","index":0}]]},"Parse Names":{"main":[[{"node":"Split Names","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Log Successful Upload","type":"main","index":0}],[{"node":"Log Failed Upload","type":"main","index":0}]]},"Folder isFound":{"main":[[{"node":"Validate","type":"main","index":0}],[{"node":"WaitForMerge","type":"main","index":0}]]},"Merge File Info / Data":{"main":[[{"node":"needsAmended","type":"main","index":0},{"node":"Get Log ID","type":"main","index":0}]]},"Are Names Valid":{"main":[[{"node":"Split Names","type":"main","index":0}],[{"node":"WaitForMerge","type":"main","index":0}]]},"needsAmended":{"main":[[{"node":"Add Amended","type":"main","index":0}],[{"node":"Upload File","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Switch","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"34833bf6-90f7-4079-9b45-42f11dd9c2c2","triggerCount":0,"shared":[{"createdAt":"2025-10-15T20:14:55.680Z","updatedAt":"2025-10-15T20:14:55.680Z","role":"workflow:owner","workflowId":"uZoMMZYsvpgIUMMa","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[]}},{"json":{"createdAt":"2025-10-16T23:38:13.720Z","updatedAt":"2025-10-17T01:13:56.000Z","id":"um0fWYE3UUL47FXW","name":"cache_dbx_folder_index","active":false,"isArchived":false,"nodes":[{"parameters":{"command":"echo %PWD%"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[-304,-528],"id":"650e735f-4a42-4bc8-9f84-ccf05f9c47c1","name":"echo_pwd"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-80,-592],"id":"07cf5046-9034-45bc-8eb3-dea79709f8c3","name":"combine"},{"parameters":{"operation":"write","fileName":"={{ $json.stdout + '\\\\dbx_index.json' }}","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[144,-592],"id":"c0549f8f-5b31-4870-b545-675a1067e778","name":"write_file"},{"parameters":{"operation":"toJson","options":{"format":true}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[-528,-592],"id":"2d94c76f-e7bb-49e5-b8bb-3135a0dc7c9a","name":"to_binary"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"5418479f-254e-428d-a816-15ca43f61a4b","leftValue":"={{ $json.type }}","rightValue":"folder","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-752,-592],"id":"ec75c07e-f143-4176-bed0-5243dcec3a9d","name":"filter_folders"},{"parameters":{"authentication":"oAuth2","resource":"folder","operation":"list","path":"/Clio","returnAll":true,"filters":{"recursive":true}},"type":"n8n-nodes-base.dropbox","typeVersion":1,"position":[-976,-592],"id":"769aa99b-b409-4b1d-9021-687a8ba6d2cf","name":"get_items","credentials":{"dropboxOAuth2Api":{"id":"dw6p2EgapsTjWrAP","name":"dbx [zramdass]"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-1200,-784],"id":"79ffcfe7-fe2a-430a-8f91-6e1719a92b90","name":"on_click"},{"parameters":{"inputSource":"passthrough"},"id":"8bfae51e-6619-478b-8120-8ecd1744a9a1","typeVersion":1.1,"name":"on_called","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-1200,-592]},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-1200,-400],"id":"d6f92cab-e322-4cb4-b643-3a83422f1497","name":"at_midnight"}],"connections":{"echo_pwd":{"main":[[{"node":"combine","type":"main","index":1}]]},"to_binary":{"main":[[{"node":"combine","type":"main","index":0},{"node":"echo_pwd","type":"main","index":0}]]},"filter_folders":{"main":[[{"node":"to_binary","type":"main","index":0}]]},"get_items":{"main":[[{"node":"filter_folders","type":"main","index":0}]]},"combine":{"main":[[{"node":"write_file","type":"main","index":0}]]},"on_click":{"main":[[{"node":"get_items","type":"main","index":0}]]},"on_called":{"main":[[{"node":"get_items","type":"main","index":0}]]},"at_midnight":{"main":[[{"node":"get_items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"09135f93-532c-4101-b48c-e10d82aa173a","triggerCount":0,"shared":[{"createdAt":"2025-10-16T23:38:13.723Z","updatedAt":"2025-10-16T23:38:13.723Z","role":"workflow:owner","workflowId":"um0fWYE3UUL47FXW","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:55.132Z","updatedAt":"2025-10-17T01:13:55.132Z","id":"8SM64STUyw1PN4fJ","name":"eservice"}]}},{"json":{"createdAt":"2025-10-17T01:09:58.534Z","updatedAt":"2025-10-17T01:31:04.000Z","id":"vxlgJqjOgFvw0dIp","name":"git_push","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"9d2b73a5-5f74-44b4-aa08-4c741f5beaf0","name":"same","type":"n8n-nodes-base.noOp","position":[768,576],"typeVersion":1},{"parameters":{},"id":"6583b2af-80d5-4f4b-96ea-37ba539d867a","name":"different","type":"n8n-nodes-base.noOp","position":[768,576],"typeVersion":1},{"parameters":{},"id":"5fd92d57-6dc6-44d4-a9af-3a2e9187c57f","name":"new","type":"n8n-nodes-base.noOp","position":[768,576],"typeVersion":1},{"parameters":{"batchSize":1,"options":{}},"id":"3d7834ca-7f4d-46de-9741-e50b4f9b57a2","name":"OneAtATime","type":"n8n-nodes-base.splitInBatches","position":[304,544],"typeVersion":1},{"parameters":{"jsCode":"// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"},"id":"cfb88cf4-ac6d-4543-84dc-770039039df4","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[848,272],"typeVersion":1},{"parameters":{},"id":"34697169-eaec-4043-93a7-5c10c0f49a65","name":"Merge","type":"n8n-nodes-base.merge","position":[560,272],"typeVersion":2},{"parameters":{"resource":"file","operation":"get","owner":"={{$node[\"Global\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Global\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Global\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"681e7b1f-5e52-4a0a-b8bc-69fdd8cbd599","name":"GH","type":"n8n-nodes-base.github","position":[512,544],"typeVersion":1,"alwaysOutputData":true,"webhookId":"ec43b093-b422-490e-8e19-ca1f0f665a69","credentials":{"githubApi":{"id":"F54J2npoi4l6xTmI","name":"GitHub [zaynram]"}},"continueOnFail":true,"onError":"continueErrorOutput"},{"parameters":{"content":"### **[DO NOTHING]** ? 0| .\n---\n---\n---\n---\n---","height":196.90909090909093,"width":184.3636363636366,"color":7},"id":"0a8e4bfa-e612-4cde-8fdd-1fbb7771abfb","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[720,512]},{"parameters":{},"id":"b91bfc21-2007-4bda-9c40-1e98f1fed3ac","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[-176,64]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"722ce56c-c55b-458d-8d50-e97e48545c39","leftValue":"={{ $json.repo.path }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"2987c313-9bab-4e69-86d5-f974a8bc2cb5","leftValue":"={{ $json.repo.name }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"f837e7c4-51ad-474a-b199-8f4a86789637","leftValue":"={{ $json.repo.owner }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"id":"22738e0c-5e8f-4e96-be96-3587972acb54","name":"Path ?","type":"n8n-nodes-base.if","typeVersion":2.2,"position":[48,64]},{"parameters":{"dataToSave":{"values":[{"key":"=JSON","value":"={{ $json }}"}]}},"id":"22431f81-a1e5-4dac-8832-5e7f62b40dbb","name":"Execution Data","type":"n8n-nodes-base.executionData","typeVersion":1,"position":[144,288]},{"parameters":{"errorType":"errorObject","errorObject":"={{ $json.JSON }}"},"id":"0b1f00d8-592b-42f0-a9bf-5ebd116946fa","name":"Stop and Error","type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[320,288]},{"parameters":{"content":"### **[ERR HANDLER] 1 (valid path) ?: t|next| OR f|error|**\n---\n---\n---\n---\n---","height":449.09090909090963,"width":460.18181818181847,"color":3},"id":"d3a6a2b8-9e68-4e62-a17f-e5b6b7eb9189","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"### **[SETUP] 1 |Set Repository Info . 2 |Batch Items . 3 |Try Getting $this File .**\n---\n---\n---\n---\n---","height":222.54545454545436,"width":690.9090909090918,"color":5},"id":"b362269f-ef2b-4cad-b276-99f8b0144b2a","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-48,480]},{"parameters":{"content":"### [UPLOAD ENTRY]\n### 1|Update File . 2|Create File .\n---\n---\n---\n---\n---","height":488.54545454545496,"width":207.27272727272776,"color":4},"id":"a475c435-8a4a-4f58-abe8-91269c0da871","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[944,576]},{"parameters":{"resource":"file","operation":"edit","owner":"={{$node[\"Global\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Global\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Global\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json","fileContent":"={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}","commitMessage":"=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"},"id":"d982da5b-97be-48e5-abc4-670fcc3f003e","name":"GitHub Edit","type":"n8n-nodes-base.github","position":[992,688],"typeVersion":1,"webhookId":"62461f9b-7276-4bb2-a8f8-50c12bd92265","credentials":{"githubApi":{"id":"F54J2npoi4l6xTmI","name":"GitHub [zaynram]"}}},{"parameters":{"content":"### **[VALIDATOR] 1 (file diff) ? same|Do Nothing OR new|Create Entry OR diff|Update Entry**\n---\n---\n---\n---\n---","height":256.90909090909093,"width":815.6363636363643},"id":"34be59f1-6b73-4bcd-b51d-59ad11c7a73c","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[512,208]},{"parameters":{"dataType":"string","value1":"={{$json[\"github_status\"]}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"5f8abe07-819f-4a60-976d-0c0c747ebc94","name":"github_status","type":"n8n-nodes-base.switch","position":[1120,272],"typeVersion":1},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"={{ $json.repo.owner }}"},{"name":"repo.name","value":"={{ $json.repo.name }}"},{"name":"repo.path","value":"={{ $json.repo.path }}"}]},"options":{}},"id":"2fe36213-b6be-4a25-a15b-c34de7c59ccd","name":"Global","type":"n8n-nodes-base.set","position":[-16,544],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"=https://github.com/{{$node[\"Global\"].json[\"repo\"][\"owner\"]}}","mode":"url"},"repository":{"__rl":true,"value":"=https://github.com/{{$node[\"Global\"].json[\"repo\"][\"owner\"]}}/{{$node[\"Global\"].json[\"repo\"][\"name\"]}}","mode":"url"},"filePath":"={{$node[\"Global\"].json[\"repo\"][\"path\"].trim() }}{{$node[\"OneAtATime\"].json[\"name\"].split(\" \").join('_').trimStart() }}.json","fileContent":"={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}","commitMessage":"=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"},"type":"n8n-nodes-base.github","typeVersion":1.1,"position":[992,912],"id":"1a77b514-6390-4798-b60d-986c4689efd7","name":"Create a file","webhookId":"740d3e8c-236a-4e7b-a58d-10f8d66b57c8","credentials":{"githubApi":{"id":"F54J2npoi4l6xTmI","name":"GitHub [zaynram]"}}}],"connections":{"same":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"different":{"main":[[{"node":"GitHub Edit","type":"main","index":0}]]},"new":{"main":[[{"node":"Create a file","type":"main","index":0},{"node":"OneAtATime","type":"main","index":0}]]},"OneAtATime":{"main":[[{"node":"GH","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"isDiffOrNew":{"main":[[{"node":"github_status","type":"main","index":0}]]},"Merge":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"GH":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Create a file","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Path ?","type":"main","index":0}]]},"Path ?":{"main":[[{"node":"Global","type":"main","index":0}],[{"node":"Execution Data","type":"main","index":0}]]},"Execution Data":{"main":[[{"node":"Stop and Error","type":"main","index":0}]]},"GitHub Edit":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"github_status":{"main":[[{"node":"same","type":"main","index":0}],[{"node":"different","type":"main","index":0}],[{"node":"new","type":"main","index":0}]]},"Global":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]},"Create a file":{"main":[[{"node":"OneAtATime","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"createdAt":"2025-10-14T22:21:18.098Z","updatedAt":"2025-10-16T20:42:57.755Z","id":"IQ02viLn0rWxHgiU","name":"outlook [eservice]","data":{"clientId":"78a50b13-c885-4788-8e99-7cee8b4f1e8e","clientSecret":"=mg~8Q~J1lqhVpsR1MCwc8VwOwZmoOdIZMysHBbJB","oauthTokenData":{"token_type":"Bearer","scope":"Calendars.Read Calendars.Read.Shared Calendars.ReadWrite Contacts.Read Contacts.ReadWrite Mail.ReadWrite Mail.ReadWrite.Shared Mail.Send Mail.Send.Shared MailboxSettings.Read openid profile email","expires_in":4500,"ext_expires_in":4500,"access_token":"eyJ0eXAiOiJKV1QiLCJub25jZSI6IkZUVm9iQ0xUeXZRY2FTdzNaUm9lS3NVZklYb0VFRTM0T3MwRlR6Nldid0UiLCJhbGciOiJSUzI1NiIsIng1dCI6IkhTMjNiN0RvN1RjYVUxUm9MSHdwSXEyNFZZZyIsImtpZCI6IkhTMjNiN0RvN1RjYVUxUm9MSHdwSXEyNFZZZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iZWMyNTM5Ny0zMGM3LTRhMTgtODI1YS1mNWQ4OWU2MmNlOWEvIiwiaWF0IjoxNzYwNjQ3MDc3LCJuYmYiOjE3NjA2NDcwNzcsImV4cCI6MTc2MDY1MTg3OCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFYUUFpLzhhQUFBQW5aRnZ0eVNkcWFvTjNvT0JuRUl2di9GZ01XTE9OMDVZTkhGNFc5YURGNm5tanptUVoyelAvYWV6TzAzRnhoY0lHQ0I1N09FNmh3a0pSbW9jdkRKbHN5ci9vSU10S0hDVVdhVHMyMUJLVmFSdG1Ya3Y2cERob3J0QW1Gc2t2M1doVnh4M2FQUmJhWFR1NTRKcEFXV2g3QT09IiwiYW1yIjpbInB3ZCJdLCJhcHBfZGlzcGxheW5hbWUiOiJuOG4gYXV0aCIsImFwcGlkIjoiNzhhNTBiMTMtYzg4NS00Nzg4LThlOTktN2NlZThiNGYxZThlIiwiYXBwaWRhY3IiOiIxIiwiZmFtaWx5X25hbWUiOiJFIFNlcnZpY2VzIiwiZ2l2ZW5fbmFtZSI6IkNyb3NieSBhbmQgQ3Jvc2J5IiwiaWR0eXAiOiJ1c2VyIiwiaXBhZGRyIjoiNzMuMjA5LjE3MS4yMDEiLCJuYW1lIjoiQ3Jvc2J5IGFuZCBDcm9zYnkgRSBTZXJ2aWNlcyIsIm9pZCI6IjYzMGQ2YmQwLThkNmUtNDMxYi04MDgxLWY2MGMwNmY2N2ExZiIsInBsYXRmIjoiMyIsInB1aWQiOiIxMDAzMjAwMUE1QTFCOTMwIiwicmgiOiIxLkFWQUFsMVBDdnNjd0dFcUNXdlhZbm1MT21nTUFBQUFBQUFBQXdBQUFBQUFBQUFEYUFXdFFBQS4iLCJzY3AiOiJDYWxlbmRhcnMuUmVhZCBDYWxlbmRhcnMuUmVhZC5TaGFyZWQgQ2FsZW5kYXJzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkIENvbnRhY3RzLlJlYWRXcml0ZSBNYWlsLlJlYWRXcml0ZSBNYWlsLlJlYWRXcml0ZS5TaGFyZWQgTWFpbC5TZW5kIE1haWwuU2VuZC5TaGFyZWQgTWFpbGJveFNldHRpbmdzLlJlYWQgb3BlbmlkIHByb2ZpbGUgZW1haWwiLCJzaWQiOiIwMDlhYzE0OS0zMWExLWU0NWItYzhjMS00MWZmYTk3YzQ5YzIiLCJzdWIiOiItU2M2RjdUVU9CT3hjLVI3aE5NRjlPVWl5MkZJTlRodEo2T3NFeEtoX2FJIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6Ik5BIiwidGlkIjoiYmVjMjUzOTctMzBjNy00YTE4LTgyNWEtZjVkODllNjJjZTlhIiwidW5pcXVlX25hbWUiOiJlc2VydmljZUBjcm9zYnlhbmRjcm9zYnlsYXcuY29tIiwidXBuIjoiZXNlcnZpY2VAY3Jvc2J5YW5kY3Jvc2J5bGF3LmNvbSIsInV0aSI6Ikd5SXZTSWxyQUVTMHNSYkZha0FDQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfYWNkIjoxNzI4NTczODIxLCJ4bXNfYWN0X2ZjdCI6IjkgMyIsInhtc19mdGQiOiJOQXA0bmpMb2tQN3J1TGNGbWpCRE51UDE3Xzgtcll2V3ZsV0JTTkR2ZEw4QmRYTmxZWE4wTFdSemJYTSIsInhtc19pZHJlbCI6IjEgMTIiLCJ4bXNfc3QiOnsic3ViIjoiRHRlUmF0WXAwZjRZdVVKZldZZVVxSm1QUm5QT1hrU0tmOWZIbFhab2dEVSJ9LCJ4bXNfc3ViX2ZjdCI6IjMgNCIsInhtc190Y2R0IjoxNjM2NTc3OTY2LCJ4bXNfdG50X2ZjdCI6IjMgOCJ9.X6Csm1k6fzcTuTA2FfQSSOSB9vbiTaO5LyeiDZToJI-7-M3xvoeN9_-7G3qEOTwLA1SrZ7Mf_0RsIhhMdNIVQsft0U5s0jA2nQf8Z2ky9yidSIdweq1J1Amids_SxcSqC28qCVXTJjU9W1yYk_DtPS9RX8-mc9ihHX_97s4Ftmh3doAhsv9fZNhqBfqsKlRr3sqBuirY7ondlij9_7JQwg7fqPjwEng_H2NmIIFmKB6GmIszzmkPM_zYw3Nq0AVIshMy6ESUZOuUB9nHUMt5dXskMmi4N39ilpmOW-JNt2rS60AHVACKWNRRqlVhIJW62rpjxqkCEhkJQ1ut9qMjKg","refresh_token":"1.AVAAl1PCvscwGEqCWvXYnmLOmhMLpXiFyIhHjpl87otPHo7aAWtQAA.AgABAwEAAABlMNzVhAPUTrARzfQjWPtKAwDs_wUA9P8hc1_nAaTHB_kXUcDUvakOy-91TaXSpeX-g596OFuSCO3TdXRYcf_7OLD5mUz2l66lMluEaKCWdSUOhooivZNDWbVTb29ipdAkXsKrjEFPwMbF4m3tBTtOcmNdWwpBfX1xUokhWRlmSOlbvXZdYJ9E56XenBy_KalDpUqri-ENddnKvB7IQl0Qh9XZCNfFHAP6cyTqKbTvFevWdONFwZZaQfvP-RSqW70YbRlOJIHopUSWnjs5zwceN_iBqoqRPXfJlfHJmMmSzPIsaPa-Txs-y-Pe01Uca3jLFgxPqMIQpXKEu77ZxLOLzb1wrX8s9ExZnWwIsDiL7DFMXI11aBq9a75Idi0zQ83n2bWXCSmxS0q38WYZ4Cadqs7vsB1E2wtiOPvvd1nvxBdlkamnYwD2UiRiqPDZoCrT65nqcsrnfSFewAEOXkmADemhhnTKPfyPqI1XffU0dIb1eA0OHjJZeXkF9HTSHhMGxRE-uVGpyrtXW43qQWEcuNJ-N3DS5mhvCNtvK7G1akq-1Bbti_ln_qRmiIHlBHSkqr0WP5EQYqO8L0zjFfWz-SwZvbfQXzKiZlC5srK1TVWyi-ox9tF4jhZV9JR22Q_OfdJe1b8i92h3nLAlEAn5QAl_LqLrgnDkST50nAVkTuFNmoimTlgnkdDfWfLWhl_zqqKNx0-_zuhHZStUhYytYv799mzTWfZBsuYOAImT4uGEEsBwzjxmusUceX77N_SEABvNeZwo4pAyP8nOlkiVQ7I1hOQuqLumqQnp25RxkIWZli4XKfa0s7lQh2CfgaA2s47JLLY3RKpBtRTBJ3onodScsEWqJOukxAyizssyBFlCaANrJqpPWLsN77ozkilzJCKgrg","id_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IkhTMjNiN0RvN1RjYVUxUm9MSHdwSXEyNFZZZyJ9.eyJhdWQiOiI3OGE1MGIxMy1jODg1LTQ3ODgtOGU5OS03Y2VlOGI0ZjFlOGUiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vYmVjMjUzOTctMzBjNy00YTE4LTgyNWEtZjVkODllNjJjZTlhL3YyLjAiLCJpYXQiOjE3NjA2NDcwNzcsIm5iZiI6MTc2MDY0NzA3NywiZXhwIjoxNzYwNjUwOTc3LCJhaW8iOiJBWVFBZS84YUFBQUFzbWdILzlLNW1kSnFzcmJGSVVLSTdUaTV1Wk1xbWZ5YlE3SFN0R21NUmRMV2pqd0ZvQ24wR2ZrYmNqa2UxT21ZMG1PVU9XSnp0NG9yd0F1cHBZbUpUUkRJNE1BTmtSV1VobUVYMGRXWTZEV2sva0xhNk0zLzV4VEpUWSt6UjYrSStlNEZDdnBBb1FGTGZTM2lhWkJ5QlNDcGdFME1tcldvd1pGUWJHUmNvTUE9IiwicmgiOiIxLkFWQUFsMVBDdnNjd0dFcUNXdlhZbm1MT21oTUxwWGlGeUloSGpwbDg3b3RQSG83YUFXdFFBQS4iLCJzdWIiOiJEdGVSYXRZcDBmNFl1VUpmV1llVXFKbVBSblBPWGtTS2Y5ZkhsWFpvZ0RVIiwidGlkIjoiYmVjMjUzOTctMzBjNy00YTE4LTgyNWEtZjVkODllNjJjZTlhIiwidXRpIjoiR3lJdlNJbHJBRVMwc1JiRmFrQUNBQSIsInZlciI6IjIuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il19.HWPnKOc0XGcyZ7N2mjuD-rBfUh9DXGhfvjhstmSYActOqdDvdsCbIf7kdujtHNBpl953e0EkZrPIOq-iqawLXQvL7TE9CTLFcgRLUEEYrxflrizlaUdaEpSLYzJ0osEqLLHmYrQKREl6iDR3p55NXW9XC6HbaV9oZDZ05C0CBmqnesqyHHSI4peZbJ2U5VpNif3_32nOEbrRpNqJv92M9KDTobB8FJrbeIcxXwbIqCGJAVV5SDjXKQdFgLNlpHHNC_Oi_ENLmNbnkZVSq7wE39DsctFp64_AYW6ZSsMFRIJU073FEcPIVzpLHUChBW3mphhnrzmi40mxPKvDHuStLQ","callbackQueryString":{"session_state":"009ac149-31a1-e45b-c8c1-41ffa97c49c2"}}},"type":"microsoftOutlookOAuth2Api","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-14T22:27:10.400Z","updatedAt":"2025-10-16T23:25:49.666Z","id":"dw6p2EgapsTjWrAP","name":"dbx [zramdass]","data":{"clientId":"j4s1u5omcnum32a","clientSecret":"n5iq09meox8arcq","oauthTokenData":{"access_token":"sl.u.AGC7h-8y2e-ghzFaIVMyRa8XaXXJiTtsbKjVmxyH8kDVSsIfOxSNLhn6ctCqLiLssBCEvt04hdFfIRWcb6C-p9jkGAnCQ5PTGVdZnFy1eUMNhLbyP-AbE1BJoE7s6EInNZ8Q_jK-VG5KOAoN-8b7W9lhFVGEo7zKAH0coZs8RPp8NCxVN1BRn-BmWM-TTDogpC4UqVQmG0yqax-FEHTIa9pe3VKmZHnYJGVeUDvEeC-ueT92zI1v7qJjZ5x84SSgJnw9Hg1K426L0OYH1QfKMNmD617R6NUwygtEctYt8TjbVEZnW2ybzezIbWyFdrt1dIPvuK2k9U3nO2XUYzxexfEgQUXtyNeS18dXQv4qhlVPsy5hX_bdniFKLIzJ-gbphjzFN5v0mrMTNgB3_tVOT5gGwqKOs82PuwK2HwaA7IqNzCDXH3iYta9pG_QybKry1vKEYBH22t13Xuzah6VgDYv3qU6PiAqBEksDKhAZDbWshY4FhOWXNDoH29YlAP8BshlmbzN9L0iveoOe96i_ZxNR-k6BVov4vntaRNf3uftq-pNuAKWD2WheFD3dsH6wwMZMcU-uKVKmcvzWR0n5mp8mTpKOf_vLNT0TEtmW-z00EPLUr1EGVCXJwpfQEL-vurkWTwhFVzKW2WEwxIPJCDYruXEcExVPibsRoFzqrFY905W32_x68qb60uRwumTDj-vdjP9n-HkHzP9DcjXiOf9R_XA_fm-SA2SlhubdHweifBfJpgrN9IVcXgYToh7QBjnA8gH0CU7HDT3B7_lGsX_Jd_khlMAHNfiuRC7rrXqRyf8shKnqaxxtTRnKdruOI-jEGx3POjkebtEsfQ_oj74V708oNAcdqOQyEs9F_faC-Yt8GdOSwtbdsU8_jXoZzfwgg6cWRUbEZJ4E0XFpIQFjPA92G5dwujkKaq-rful0o5331AckdKGLznYqUkilUDAGG-pHd6vO83m4N99LTDWphilGNE5AUYlBJTuRAqWJlrm31Dk6RuUCyr6V_KmoKeDp65Ws2VDszbetVVM0ZCVlBkRqOjkv9qo5X5ssHFBmSJJ5V8Q2Zjmw9kPfUMTfJsGol-9syMHdxtE-F_PeZ7ybRQxSf8jWCknFTz8YtfFAQqsBI4MGSWqJ_QohRRORtNdW2dCFIzTSIApbKuS9uLNd8Wl9tOrFLcAYwsP34hCcuIPOKjDYpmjvm4n2JRvmdrurlDtYdrY5zi5o3JSQs_vVRU0-db_CpckzJw7tAvLgwd-FwyAWdqcVDSI6nSwL04ed-4aC-WE139Y5ksnRbQ5h6RqmWcac1ADt7_IT64F2iT14R1YG2jHoeSU-X3xyJsyIt2m1248d2PRPs2nxypY3zF5IlnlXRidJOHJhHeTEEMXw5BUZp5Obpsc7z4rhulCPnbNHbGFuzTOfI9Lqh8JmiaD57nqGC8Bw-VkuI6GZpA","token_type":"bearer","expires_in":14400,"refresh_token":"YAQWXlM6Hw0AAAAAAAAAAeSuMb5YrDXCVRZQ-zlC9GIEvqdOCA5cCjFELQXhle-N","scope":"account_info.read files.content.read files.content.write files.metadata.read","uid":"2327732465","account_id":"dbid:AACH08JF0enOWwuic-HNcFByOBY6OoHpqx8"}},"type":"dropboxOAuth2Api","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-14T22:28:36.439Z","updatedAt":"2025-10-14T22:28:57.205Z","id":"BqXKeIPc7ETbnWCr","name":"gdrive [ramdasszayn]","data":{"clientId":"524424898148-qb9gj9g90a00oaor4g50lau3k17j589c.apps.googleusercontent.com","clientSecret":"=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","oauthTokenData":{"access_token":"ya29.a0AQQ_BDQmkbVo9ywi1YWKLvYrRS6Khk1m4ZeP1-MomppmDlwqItRbjnwPyUG6QDJhWUg4W4Ga7DoDjZd0N_5GKHFHtuxlpyHNh91kGAlc92Udysa6uA19F6OEj3kMRhJvPyEIy0evMTa359IF5XIsuEeXsnAHPM2XhpuYFOh0jR9-T7NfOBpPjZHWskREouzG6VjOCyUaCgYKAekSARUSFQHGX2Mirj_nUQurq-PMF4TL6II9Ow0206","expires_in":3599,"refresh_token":"1//017EpFXHpM1aXCgYIARAAGAESNwF-L9Ir2s-WfnEjXe-QDZwsv2E6OvRaIJrsUnIBtqZlSvCzEw3rEWwmEJGhczeqyqJiDUfWv7M","scope":"https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/drive.photos.readonly","token_type":"Bearer","refresh_token_expires_in":604799,"callbackQueryString":{"scope":"https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.photos.readonly https://www.googleapis.com/auth/drive.appdata"}}},"type":"googleDriveOAuth2Api","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-14T22:29:20.604Z","updatedAt":"2025-10-14T22:29:39.784Z","id":"4LRgDhfNzSsMKby7","name":"gsheets [ramdasszayn]","data":{"clientId":"=524424898148-qb9gj9g90a00oaor4g50lau3k17j589c.apps.googleusercontent.com","clientSecret":"=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","oauthTokenData":{"access_token":"ya29.a0AQQ_BDQr73YI2SSCFkiCtatev4A6jSeyKq6n6jnMxBq3_YH-mGJU_pTfqHhRhs7_RtEPyjUthrPZGa0OEZl0yTWZVQyz7NCS5P4GI84oC4J6gmCAG207eOlWa7yqilIbcq6ZncX4VhjeYY8W2YtRrpdU3bDJsn5c63skqMfGWUInii6j2UpANtZMeZIH65LszMfBVGkaCgYKATkSARUSFQHGX2MiDM5sgIv2W93Tfxvn2f5hcw0206","expires_in":3599,"refresh_token":"1//01ucKXCxUHjc2CgYIARAAGAESNwF-L9Ir-yiCy_Gav3OExjYV-v0407n3WZG5jZKaqq4-W5RfmX934VH_YZXjNhsZnF-4LXFy0Pw","scope":"https://www.googleapis.com/auth/spreadsheets https://www.googleapis.com/auth/drive.metadata https://www.googleapis.com/auth/drive.file","token_type":"Bearer","refresh_token_expires_in":604798,"callbackQueryString":{"scope":"https://www.googleapis.com/auth/drive.metadata https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/spreadsheets"}}},"type":"googleSheetsOAuth2Api","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-15T01:57:52.635Z","updatedAt":"2025-10-15T01:58:17.209Z","id":"2xpv7b5ixjJLAyzz","name":"Python Environment Variables account","data":{"envFileContent":"=python=\"c:/users/remote/desktop/n8n/.pixi/envs/default/python.exe\""},"type":"pythonEnvVars","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-17T01:06:02.515Z","updatedAt":"2025-10-17T01:06:07.758Z","id":"rCgMYtVh9Jz1Vg85","name":"this","data":{"apiKey":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJlMzA4ZjJmMi0yOTI3LTQ4YmMtOWU4OS1lYTBjNzMwOGM0N2MiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzYwNjYzMTE5fQ.ZfgIj-EAQq5qf-Vym79yyr1VMqqjhuImmQGyvVyOpPc","baseUrl":"https://ccn8n.org/api/v1"},"type":"n8nApi","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}},{"json":{"createdAt":"2025-10-17T01:09:18.322Z","updatedAt":"2025-10-17T01:09:18.321Z","id":"F54J2npoi4l6xTmI","name":"GitHub [zaynram]","data":{"user":"zaynram","accessToken":"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"},"type":"githubApi","isManaged":false,"repo":{"path":"credentials/","name":"n8n_backup","owner":"zaynram"}}}]},"versionId":"0887c72c-5261-433d-be96-52e5a7d851d9","triggerCount":0,"shared":[{"createdAt":"2025-10-17T01:09:58.534Z","updatedAt":"2025-10-17T01:09:58.534Z","role":"workflow:owner","workflowId":"vxlgJqjOgFvw0dIp","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:10:02.746Z","updatedAt":"2025-10-17T01:10:02.746Z","id":"oh4Bp9q4P5dx9613","name":"utility"}]}}]},"versionId":"e2171fa2-f80e-4223-897c-a0f774b835ff","triggerCount":0,"shared":[{"createdAt":"2025-10-17T01:04:41.194Z","updatedAt":"2025-10-17T01:04:41.194Z","role":"workflow:owner","workflowId":"fDpjF1xykMVeY6kY","projectId":"ixpNRE1B5DSjZ1fx"}],"tags":[{"createdAt":"2025-10-17T01:13:09.099Z","updatedAt":"2025-10-17T01:13:09.099Z","id":"VCp81cfqLfblmEUD","name":"backup"}]}]